version: 0.2

env:
  variables:
    IMAGE_TAG: "no_version"

phases:
    install:
      commands:
        - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&
        - timeout -t 15 sh -c "until docker info; do echo .; sleep 1; done"
        - apk -Uuv add groff less python py-pip;
        - pip install awscli;
        - echo Logging in to Amazon ECR...
        - $(aws ecr get-login --region $AWS_DEFAULT_REGION)
    pre_build:
      commands:
        - echo Logging in to Amazon ECR...
        - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
    build:
      commands:
        - echo Build started on `date`
        - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest .
        - docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
        - docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:1.6
    post_build:
      commands:
        - echo Build completed on `date`
        - echo Pushing the Docker image...
        - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:1.6
        - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest

artifacts:
  files:
    - 'stop_server.sh'
    - 'start_server.sh'
    - 'appspec.yml'
    - 'docker-compose.testing.yml'
    - 'docker-compose.swarm.yml'
